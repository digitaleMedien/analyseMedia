
R version 3.2.4 (2016-03-10) -- "Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "AnalyseMedia"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('AnalyseMedia')
Loading required package: SPARQL
Loading required package: XML
Loading required package: RCurl
Loading required package: bitops
Loading required package: dplyr

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

Loading required package: xml2
Warning: package 'xml2' was built under R version 3.2.5
Loading required package: rvest
Warning: package 'rvest' was built under R version 3.2.5

Attaching package: 'rvest'

The following object is masked from 'package:XML':

    xml

Loading required package: stringr
Loading required package: tidyr

Attaching package: 'tidyr'

The following object is masked from 'package:RCurl':

    complete

Loading required package: rmarkdown
Loading required package: knitr
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cleanCharacters")
> ### * cleanCharacters
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cleanCharacters
> ### Title: Remove false characters.
> ### Aliases: cleanCharacters
> 
> ### ** Examples
> 
> ## Not run: 
> ##D cleanCharacters(dat)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("dualPlot")
> ### * dualPlot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dualPlot
> ### Title: Combination of linechart and barplot.
> ### Aliases: dualPlot
> 
> ### ** Examples
> 
> ## Not run: 
> ##D dualPlot(
> ##D titleMain = "The main title",
> ##D titleSub = "Subtitle",
> ##D yAxisTitle = "Y-Axis",
> ##D xAxisTitle = "X-Axis",
> ##D refText = "Source:",
> ##D dat,
> ##D pdfName = "./data/plot/out.pdf",
> ##D y2AxisTitle = "Y2-Axis",
> ##D selectSearchTerm = "keyword")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("filterResultSet")
> ### * filterResultSet
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: filterResultSet
> ### Title: Remove false results.
> ### Aliases: filterResultSet
> 
> ### ** Examples
> 
> ## Not run: 
> ##D filterResultSet(dat)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("freqByTime")
> ### * freqByTime
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: freqByTime
> ### Title: Frequency by time
> ### Aliases: freqByTime
> 
> ### ** Examples
> 
> ## Not run: 
> ##D freqByTime(dat,"%Y",TRUE)
> ##D freqByTime(dat,"%Y%m",TRUE)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("removeHtml")
> ### * removeHtml
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: removeHtml
> ### Title: Remove html-code from content
> ### Aliases: removeHtml
> 
> ### ** Examples
> 
> ## Not run: 
> ##D removeHtml(htmlContent)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("sampleArticles")
> ### * sampleArticles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sampleArticles
> ### Title: Sample articles
> ### Aliases: sampleArticles
> 
> ### ** Examples
> 
> ## Not run: 
> ##D sampeArticles(dat,minArt=10,maxArt=30,percent=0.05)
> ##D sampeArticles(dat,minArt=10,maxArt=80,percent=0.20)
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.75 0.11 3.37 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
